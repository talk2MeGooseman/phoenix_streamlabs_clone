# Version of docker-compose
version: '3.7'

# Defines the containers
services:
  # First project container (can be named anything)
  # web:
  #   # Build parameters for the container
  #   build:
  #     # Declares that the container should be built from the current directory
  #     context: .
  #   ports:
  #     # Maps ports to be accessed by the app outside of the container
  #     - "4000:4000"
  #   volumes:
  #     # Files that I want to see changes to without rebuilding the container
  #     # This is optional, but a useful feature I've had on other projects
  #     - ./assets/css:/app/assets/css
  #     - ./assets/js:/app/assets/js
  #     - ./assets/static:/app/assets/static
  #     - ./assets/.babelrc:/app/assets/.babelrc
  #     - ./assets/package.json:/app/assets/package.json
  #     - ./assets/webpack.config.js:/app/assets/webpack.config.js
  #     - ./config:/app/config
  #     - ./lib:/app/lib
  #     - ./priv:/app/priv
  #     - ./mix.exs:/app/mix.exs
  #     - ./mix.lock:/app/mix.lock
  #     - ./test:/app/test
  #   depends_on:
  #     # The `db` container needs to be started before `web` is started
  #     - db
  # Second project container
  db:
    # Declares which Postres image to use
    image: postgres:11.5
    # Declare a volume to not loose database data when stopping the container
    volumes:
      - postgres:/var/lib/postgresql/data
    # Maps port to be accessed by `web` container
    ports:
      - "5432:5432"
# This needs to be declared because `volumes` was uesd in the `db` container
# Tells Docker to create a volume on the host machine to maintain data
volumes:
  postgres:
